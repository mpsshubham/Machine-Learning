randomForest
randomForest()
?randomForest
?Boruta
library(Boruta)
install.packages("Boruta")
library(Boruta)
?randomForest
setwd("~/git/Machine-Learning/2.Regression/1.Simple Linear Regression")
setwd("~/git/Machine-Learning/2.Regression/1.Simple Linear Regression")
library("caTools", lib.loc="~/anaconda2/lib/R/library")
# Data Preprocessing
# 2.Importing the dataset
dataset = read.csv('Salary_Data.csv')
View(dataset)
# 5. Splitting the dataset into the Training set and Test set
library(caTools)
set.seed(123)     # to have same data on split
split = sample.split(dataset$Salary, SplitRatio = 2/3)
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
View(test_set)
# Fitting Simple Linear Regression to the Training Set
regressor = lm(formula = Salary ~ YearsExperience,
data = training_set)
View(regressor)
summary(regressor)
View(test_set)
# Predicting the Test set results
y_pred = predict(regressor, newdata = test_set)
y_pred
library("ggplot2", lib.loc="~/anaconda2/lib/R/library")
install.packages('ggplot2')
install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = training_set$YearsExperience, y = training_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Training Set)') +
xlab('Years Of Experience') +
ylab('Salary')
library(ggplot2)
ggplot() +
geom_point(aes(x = test_set$YearsExperience, y = test_set$Salary),
colour = 'red') +
geom_line(aes(x = training_set$YearsExperience, y = predict(regressor, newdata = training_set)),
colour = 'blue') +
ggtitle('Salary vs Experience (Test Set)') +
xlab('Years Of Experience') +
ylab('Salary')
